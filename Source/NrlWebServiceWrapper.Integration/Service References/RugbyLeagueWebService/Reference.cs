//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NrlWebServiceWrapper.Integration.RugbyLeagueWebService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RugbyLeagueWebService.RugbyLeagueSoap")]
    public interface RugbyLeagueSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeagues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetLeagues(int clientId, string localeId, string countryId, string leagueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeagues", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetLeaguesAsync(int clientId, string localeId, string countryId, string leagueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVenues", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetVenues(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetVenues", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetVenuesAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGroups", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetGroups(int clientId, string localeId, string seriesId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetGroups", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetGroupsAsync(int clientId, string localeId, string seriesId, string groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeams", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeams(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeams", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamsAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCountries(int clientId, string localeId, string countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCountries", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesAsync(int clientId, string localeId, string countryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetPlayers(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string teamId, string positionId, string playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayersAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string teamId, string positionId, string playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerPositions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetPlayerPositions(int clientId, string localeId, string positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerPositions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerPositionsAsync(int clientId, string localeId, string positionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCompetitionList(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionListAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamLineUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeamLineUp(int clientId, int seriesId, int matchId, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamLineUp", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamLineUpAsync(int clientId, int seriesId, int matchId, int teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionRoundList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCompetitionRoundList(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionRoundList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionRoundListAsync(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionFixture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCompetitionFixture(int clientId, int seriesId, int roundId, int groupId, int teamId, int venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCompetitionFixture", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionFixtureAsync(int clientId, int seriesId, int roundId, int groupId, int teamId, int venueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSeriesTeam", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSeriesTeam(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSeriesTeam", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSeriesTeamAsync(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFormGuide", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetFormGuide(int clientId, int seriesId, int roundId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFormGuide", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetFormGuideAsync(int clientId, int seriesId, int roundId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFullSeriesList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetFullSeriesList(int clientId, int leagueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFullSeriesList", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetFullSeriesListAsync(int clientId, int leagueId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadChart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetLeadChart(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetLeadChart", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetLeadChartAsync(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeamStats(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamStats", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamStatsAsync(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerStanding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetPlayerStanding(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerStanding", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerStandingAsync(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMatchStats(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchStats", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchStatsAsync(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamStanding", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeamStanding(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamStanding", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamStandingAsync(int clientId, int seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMainScorecard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMainScorecard(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMainScorecard", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMainScorecardAsync(int clientId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFixture", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetFixture(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetFixture", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetFixtureAsync(int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommentary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCommentary(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCommentary", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCommentaryAsync(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchPredictions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMatchPredictions(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchPredictions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchPredictionsAsync(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchletContent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetMatchletContent(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetMatchletContent", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchletContentAsync(int clientId, string localeId, int seriesId, int matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamMatchStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeamMatchStats(int clientId, string localeId, string seriesId, string matchId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamMatchStats", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamMatchStatsAsync(int clientId, string localeId, string seriesId, string matchId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamSeriesStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetTeamSeriesStats(int clientId, string localeId, string seriesId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTeamSeriesStats", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamSeriesStatsAsync(int clientId, string localeId, string seriesId, string teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSystemEvents", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlElement GetSystemEvents(int clientId, string lastAccessDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSystemEvents", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlElement> GetSystemEventsAsync(int clientId, string lastAccessDateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerStats", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetPlayerStats(int clientId, string localeId, int seriesId, int matchId, int teamId, int playerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPlayerStats", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerStatsAsync(int clientId, string localeId, int seriesId, int matchId, int teamId, int playerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RugbyLeagueSoapChannel : NrlWebServiceWrapper.Integration.RugbyLeagueWebService.RugbyLeagueSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RugbyLeagueSoapClient : System.ServiceModel.ClientBase<NrlWebServiceWrapper.Integration.RugbyLeagueWebService.RugbyLeagueSoap>, NrlWebServiceWrapper.Integration.RugbyLeagueWebService.RugbyLeagueSoap {
        
        public RugbyLeagueSoapClient() {
        }
        
        public RugbyLeagueSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RugbyLeagueSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RugbyLeagueSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RugbyLeagueSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode GetLeagues(int clientId, string localeId, string countryId, string leagueId) {
            return base.Channel.GetLeagues(clientId, localeId, countryId, leagueId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetLeaguesAsync(int clientId, string localeId, string countryId, string leagueId) {
            return base.Channel.GetLeaguesAsync(clientId, localeId, countryId, leagueId);
        }
        
        public System.Xml.XmlNode GetVenues(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId) {
            return base.Channel.GetVenues(clientId, localeId, countryId, leagueId, seriesId, matchId, venueId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetVenuesAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId) {
            return base.Channel.GetVenuesAsync(clientId, localeId, countryId, leagueId, seriesId, matchId, venueId);
        }
        
        public System.Xml.XmlNode GetGroups(int clientId, string localeId, string seriesId, string groupId) {
            return base.Channel.GetGroups(clientId, localeId, seriesId, groupId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetGroupsAsync(int clientId, string localeId, string seriesId, string groupId) {
            return base.Channel.GetGroupsAsync(clientId, localeId, seriesId, groupId);
        }
        
        public System.Xml.XmlNode GetTeams(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId, string teamId) {
            return base.Channel.GetTeams(clientId, localeId, countryId, leagueId, seriesId, matchId, venueId, teamId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamsAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string venueId, string teamId) {
            return base.Channel.GetTeamsAsync(clientId, localeId, countryId, leagueId, seriesId, matchId, venueId, teamId);
        }
        
        public System.Xml.XmlNode GetCountries(int clientId, string localeId, string countryId) {
            return base.Channel.GetCountries(clientId, localeId, countryId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCountriesAsync(int clientId, string localeId, string countryId) {
            return base.Channel.GetCountriesAsync(clientId, localeId, countryId);
        }
        
        public System.Xml.XmlNode GetPlayers(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string teamId, string positionId, string playerId) {
            return base.Channel.GetPlayers(clientId, localeId, countryId, leagueId, seriesId, matchId, teamId, positionId, playerId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayersAsync(int clientId, string localeId, string countryId, string leagueId, string seriesId, string matchId, string teamId, string positionId, string playerId) {
            return base.Channel.GetPlayersAsync(clientId, localeId, countryId, leagueId, seriesId, matchId, teamId, positionId, playerId);
        }
        
        public System.Xml.XmlNode GetPlayerPositions(int clientId, string localeId, string positionId) {
            return base.Channel.GetPlayerPositions(clientId, localeId, positionId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerPositionsAsync(int clientId, string localeId, string positionId) {
            return base.Channel.GetPlayerPositionsAsync(clientId, localeId, positionId);
        }
        
        public System.Xml.XmlNode GetCompetitionList(int clientId) {
            return base.Channel.GetCompetitionList(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionListAsync(int clientId) {
            return base.Channel.GetCompetitionListAsync(clientId);
        }
        
        public System.Xml.XmlNode GetTeamLineUp(int clientId, int seriesId, int matchId, int teamId) {
            return base.Channel.GetTeamLineUp(clientId, seriesId, matchId, teamId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamLineUpAsync(int clientId, int seriesId, int matchId, int teamId) {
            return base.Channel.GetTeamLineUpAsync(clientId, seriesId, matchId, teamId);
        }
        
        public System.Xml.XmlNode GetCompetitionRoundList(int clientId, int seriesId) {
            return base.Channel.GetCompetitionRoundList(clientId, seriesId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionRoundListAsync(int clientId, int seriesId) {
            return base.Channel.GetCompetitionRoundListAsync(clientId, seriesId);
        }
        
        public System.Xml.XmlNode GetCompetitionFixture(int clientId, int seriesId, int roundId, int groupId, int teamId, int venueId) {
            return base.Channel.GetCompetitionFixture(clientId, seriesId, roundId, groupId, teamId, venueId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCompetitionFixtureAsync(int clientId, int seriesId, int roundId, int groupId, int teamId, int venueId) {
            return base.Channel.GetCompetitionFixtureAsync(clientId, seriesId, roundId, groupId, teamId, venueId);
        }
        
        public System.Xml.XmlNode GetSeriesTeam(int clientId, int seriesId) {
            return base.Channel.GetSeriesTeam(clientId, seriesId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSeriesTeamAsync(int clientId, int seriesId) {
            return base.Channel.GetSeriesTeamAsync(clientId, seriesId);
        }
        
        public System.Xml.XmlNode GetFormGuide(int clientId, int seriesId, int roundId, int matchId) {
            return base.Channel.GetFormGuide(clientId, seriesId, roundId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetFormGuideAsync(int clientId, int seriesId, int roundId, int matchId) {
            return base.Channel.GetFormGuideAsync(clientId, seriesId, roundId, matchId);
        }
        
        public System.Xml.XmlNode GetFullSeriesList(int clientId, int leagueId) {
            return base.Channel.GetFullSeriesList(clientId, leagueId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetFullSeriesListAsync(int clientId, int leagueId) {
            return base.Channel.GetFullSeriesListAsync(clientId, leagueId);
        }
        
        public System.Xml.XmlNode GetLeadChart(int clientId, int seriesId, int matchId) {
            return base.Channel.GetLeadChart(clientId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetLeadChartAsync(int clientId, int seriesId, int matchId) {
            return base.Channel.GetLeadChartAsync(clientId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetTeamStats(int clientId, int seriesId) {
            return base.Channel.GetTeamStats(clientId, seriesId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamStatsAsync(int clientId, int seriesId) {
            return base.Channel.GetTeamStatsAsync(clientId, seriesId);
        }
        
        public System.Xml.XmlNode GetPlayerStanding(int clientId, int seriesId) {
            return base.Channel.GetPlayerStanding(clientId, seriesId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerStandingAsync(int clientId, int seriesId) {
            return base.Channel.GetPlayerStandingAsync(clientId, seriesId);
        }
        
        public System.Xml.XmlNode GetMatchStats(int clientId, int seriesId, int matchId) {
            return base.Channel.GetMatchStats(clientId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchStatsAsync(int clientId, int seriesId, int matchId) {
            return base.Channel.GetMatchStatsAsync(clientId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetTeamStanding(int clientId, int seriesId) {
            return base.Channel.GetTeamStanding(clientId, seriesId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamStandingAsync(int clientId, int seriesId) {
            return base.Channel.GetTeamStandingAsync(clientId, seriesId);
        }
        
        public System.Xml.XmlNode GetMainScorecard(int clientId, int seriesId, int matchId) {
            return base.Channel.GetMainScorecard(clientId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMainScorecardAsync(int clientId, int seriesId, int matchId) {
            return base.Channel.GetMainScorecardAsync(clientId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetFixture(int clientId) {
            return base.Channel.GetFixture(clientId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetFixtureAsync(int clientId) {
            return base.Channel.GetFixtureAsync(clientId);
        }
        
        public System.Xml.XmlNode GetCommentary(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetCommentary(clientId, localeId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCommentaryAsync(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetCommentaryAsync(clientId, localeId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetMatchPredictions(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetMatchPredictions(clientId, localeId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchPredictionsAsync(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetMatchPredictionsAsync(clientId, localeId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetMatchletContent(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetMatchletContent(clientId, localeId, seriesId, matchId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetMatchletContentAsync(int clientId, string localeId, int seriesId, int matchId) {
            return base.Channel.GetMatchletContentAsync(clientId, localeId, seriesId, matchId);
        }
        
        public System.Xml.XmlNode GetTeamMatchStats(int clientId, string localeId, string seriesId, string matchId, string teamId) {
            return base.Channel.GetTeamMatchStats(clientId, localeId, seriesId, matchId, teamId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamMatchStatsAsync(int clientId, string localeId, string seriesId, string matchId, string teamId) {
            return base.Channel.GetTeamMatchStatsAsync(clientId, localeId, seriesId, matchId, teamId);
        }
        
        public System.Xml.XmlNode GetTeamSeriesStats(int clientId, string localeId, string seriesId, string teamId) {
            return base.Channel.GetTeamSeriesStats(clientId, localeId, seriesId, teamId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetTeamSeriesStatsAsync(int clientId, string localeId, string seriesId, string teamId) {
            return base.Channel.GetTeamSeriesStatsAsync(clientId, localeId, seriesId, teamId);
        }
        
        public System.Xml.XmlElement GetSystemEvents(int clientId, string lastAccessDateTime) {
            return base.Channel.GetSystemEvents(clientId, lastAccessDateTime);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlElement> GetSystemEventsAsync(int clientId, string lastAccessDateTime) {
            return base.Channel.GetSystemEventsAsync(clientId, lastAccessDateTime);
        }
        
        public System.Xml.XmlNode GetPlayerStats(int clientId, string localeId, int seriesId, int matchId, int teamId, int playerId) {
            return base.Channel.GetPlayerStats(clientId, localeId, seriesId, matchId, teamId, playerId);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetPlayerStatsAsync(int clientId, string localeId, int seriesId, int matchId, int teamId, int playerId) {
            return base.Channel.GetPlayerStatsAsync(clientId, localeId, seriesId, matchId, teamId, playerId);
        }
    }
}
